1. converted html  file into ejs file coz HTML is static and cannot dynamically render data from the backend without client-side scripting (JavaScript, AJAX, or React/Vue). This makes it less efficient for admin panels, which usually require dynamic data, authentication checks, and reusable layouts.

2. intalled npm install ejs for that

3. server.js ma gayera path update gareko so that http://localhost:3000/dashboard garera aawos

4. dashboard.ejs ma form xa teha dashboard.js linkes xa, action through bata server.js ma
import { addStopsdb } from '../controllers/dashboardController.js';
app.post('/api/addStop', addStopsdb);

5. dashboardController.js ma
    import supabase from "../config/supabaseClient.js";

export const addStopsdb = async (req, res) => {
    // Extract values from request body
    const { stopName, latitude, longitude } = req.body;

    try {
        const { error } = await supabase
            .from('stop')
            .insert([{
                stops_name: stopName,  // Match DB column name
                stops_lon: longitude,  // Match DB column name
                stops_lat: latitude    // Match DB column name
            }]);

        if (error) throw error;

        res.json({ success: true, message: 'Stop added successfully' });
    } catch (error) {
        res.status(500).json({ success: false, message: error.message });
    }
};


6. finally api.js ma api use gareko xa